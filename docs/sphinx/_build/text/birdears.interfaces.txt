birdears.interfaces package
***************************


Submodules
==========


birdears.interfaces.commandline module
======================================

birdears.interfaces.commandline.CommandLine(exercise, **kwargs)

   This function implements the birdears loop for command line.

   Parameters:
      * **exercise** (*str*) – The question name.

      * ****kwargs** (*kwargs*) – FIXME: The kwargs can contain
        options for specific questions.

birdears.interfaces.commandline.center_text(text, sep=True, nl=0)

   This function returns input text centered according to terminal
   columns.

   Parameters:
      * **text** (*str*) – The string to be centered, it can have
        multiple lines.

      * **sep** (*bool*) – Add line separator after centered text
        (True) or not (False).

      * **nl** (*int*) – How many new lines to add after text.

birdears.interfaces.commandline.make_input_str(user_input, keyboard_index)

   Makes a string representing intervals entered by the user.

   This function is to be used by questions which takes more than one
   interval input as MelodicDictation, and formats the intervals
   already entered.

   Parameters:
      * **user_input** (*array_type*) – The list of keyboard keys
        entered by user.

      * **keyboard_index** (*array_type*) – The keyboard mapping
        used by question.

birdears.interfaces.commandline.print_instrumental(response)

   Prints the formatted response for ‘instrumental’ exercise.

   Parameters:
      **response** (*dict*) – A response returned by question’s
      check_question()

birdears.interfaces.commandline.print_question(question)

   Prints the question to the user.

   Parameters:
      **question** (*obj*) – A Question class with the question to be
      printed.

birdears.interfaces.commandline.print_response(response)

   Prints the formatted response.

   Parameters:
      **response** (*dict*) – A response returned by question’s
      check_question()
